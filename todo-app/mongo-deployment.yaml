apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
  #   kompose.cmd: kompose convert
  #   kompose.version: 1.24.0 (4a2a0458)
  # creationTimestamp: null
  name: mongo
  labels:
    io.kompose.service: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      # annotations:
      #   kompose.cmd: kompose convert
      #   kompose.version: 1.24.0 (4a2a0458)
      # creationTimestamp: null
      labels:
        io.kompose.service: mongo
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_DATABASE
                  name: env-mongo-env
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: env-mongo-env
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: env-mongo-env
          image: mongo
          name: mongo-db
          ports:
            - containerPort: 27017
            - containerPort: 27018
            - containerPort: 27019
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init-mongo.js
              name: mongo-claim0
              readOnly: true
            - mountPath: /data/db
              name: mongo-claim1
      restartPolicy: Always
      volumes:
        - name: mongo-claim0
          persistentVolumeClaim:
            claimName: mongo-claim0
            readOnly: true
        - name: mongo-claim1
          persistentVolumeClaim:
            claimName: mongo-claim1
status: {}
